// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace MovieManager.Data.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20181221155701_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KinoxToExporter.Shared.Models.LinkEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsViewed");

                    b.Property<string>("Link");

                    b.Property<int?>("LinkGroupId");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.HasIndex("LinkGroupId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("KinoxToExporter.Shared.Models.LinkGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsFavourite");

                    b.Property<string>("Name");

                    b.Property<string>("Thumbnail");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("KinoxToExporter.Shared.Models.LinkEntry", b =>
                {
                    b.HasOne("KinoxToExporter.Shared.Models.LinkGroup")
                        .WithMany("Links")
                        .HasForeignKey("LinkGroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
